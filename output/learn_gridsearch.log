/home/don/sync/scikit-learn/sklearn/cross_validation.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
/home/don/sync/scikit-learn/sklearn/grid_search.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
  DeprecationWarning)
START:preprocessing: (read data, scaling, remove constant columns
/home/don/sync/scikit-learn/sklearn/utils/extmath.py:360: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
  warnings.warn("The number of power iterations is increased to 7 to "
before scaling: (76020, 369)
after scaling: (76020, 337)
############################### tuning for grid_param:{'max_depth': [3, 4, 5, 6, 7], 'min_child_weight': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]} 
Fitting 4 folds for each of 55 candidates, totalling 220 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed: 17.4min
[Parallel(n_jobs=8)]: Done 112 tasks      | elapsed: 105.7min
[Parallel(n_jobs=8)]: Done 220 out of 220 | elapsed: 254.0min finished
mean: 0.83507, std: 0.00476, params: {'max_depth': 3, 'min_child_weight': 1}
mean: 0.83552, std: 0.00532, params: {'max_depth': 3, 'min_child_weight': 2}
mean: 0.83496, std: 0.00489, params: {'max_depth': 3, 'min_child_weight': 3}
mean: 0.83544, std: 0.00463, params: {'max_depth': 3, 'min_child_weight': 4}
mean: 0.83461, std: 0.00470, params: {'max_depth': 3, 'min_child_weight': 5}
mean: 0.83497, std: 0.00500, params: {'max_depth': 3, 'min_child_weight': 6}
mean: 0.83523, std: 0.00561, params: {'max_depth': 3, 'min_child_weight': 7}
mean: 0.83508, std: 0.00545, params: {'max_depth': 3, 'min_child_weight': 8}
mean: 0.83498, std: 0.00512, params: {'max_depth': 3, 'min_child_weight': 9}
mean: 0.83549, std: 0.00520, params: {'max_depth': 3, 'min_child_weight': 10}
mean: 0.83557, std: 0.00539, params: {'max_depth': 3, 'min_child_weight': 11}
mean: 0.82975, std: 0.00532, params: {'max_depth': 4, 'min_child_weight': 1}
mean: 0.83019, std: 0.00447, params: {'max_depth': 4, 'min_child_weight': 2}
mean: 0.83083, std: 0.00582, params: {'max_depth': 4, 'min_child_weight': 3}
mean: 0.83088, std: 0.00611, params: {'max_depth': 4, 'min_child_weight': 4}
mean: 0.83007, std: 0.00511, params: {'max_depth': 4, 'min_child_weight': 5}
mean: 0.83047, std: 0.00582, params: {'max_depth': 4, 'min_child_weight': 6}
mean: 0.83077, std: 0.00612, params: {'max_depth': 4, 'min_child_weight': 7}
mean: 0.83069, std: 0.00567, params: {'max_depth': 4, 'min_child_weight': 8}
mean: 0.83112, std: 0.00511, params: {'max_depth': 4, 'min_child_weight': 9}
mean: 0.83124, std: 0.00594, params: {'max_depth': 4, 'min_child_weight': 10}
mean: 0.83201, std: 0.00529, params: {'max_depth': 4, 'min_child_weight': 11}
mean: 0.82414, std: 0.00473, params: {'max_depth': 5, 'min_child_weight': 1}
mean: 0.82571, std: 0.00451, params: {'max_depth': 5, 'min_child_weight': 2}
mean: 0.82590, std: 0.00606, params: {'max_depth': 5, 'min_child_weight': 3}
mean: 0.82522, std: 0.00509, params: {'max_depth': 5, 'min_child_weight': 4}
mean: 0.82516, std: 0.00533, params: {'max_depth': 5, 'min_child_weight': 5}
mean: 0.82500, std: 0.00514, params: {'max_depth': 5, 'min_child_weight': 6}
mean: 0.82573, std: 0.00607, params: {'max_depth': 5, 'min_child_weight': 7}
mean: 0.82561, std: 0.00485, params: {'max_depth': 5, 'min_child_weight': 8}
mean: 0.82645, std: 0.00533, params: {'max_depth': 5, 'min_child_weight': 9}
mean: 0.82599, std: 0.00499, params: {'max_depth': 5, 'min_child_weight': 10}
mean: 0.82652, std: 0.00580, params: {'max_depth': 5, 'min_child_weight': 11}
mean: 0.81746, std: 0.00421, params: {'max_depth': 6, 'min_child_weight': 1}
mean: 0.81791, std: 0.00494, params: {'max_depth': 6, 'min_child_weight': 2}
mean: 0.81824, std: 0.00421, params: {'max_depth': 6, 'min_child_weight': 3}
mean: 0.81857, std: 0.00405, params: {'max_depth': 6, 'min_child_weight': 4}
mean: 0.81967, std: 0.00442, params: {'max_depth': 6, 'min_child_weight': 5}
mean: 0.81965, std: 0.00461, params: {'max_depth': 6, 'min_child_weight': 6}
mean: 0.81963, std: 0.00432, params: {'max_depth': 6, 'min_child_weight': 7}
mean: 0.82122, std: 0.00455, params: {'max_depth': 6, 'min_child_weight': 8}
mean: 0.82030, std: 0.00405, params: {'max_depth': 6, 'min_child_weight': 9}
mean: 0.82116, std: 0.00454, params: {'max_depth': 6, 'min_child_weight': 10}
mean: 0.82122, std: 0.00427, params: {'max_depth': 6, 'min_child_weight': 11}
mean: 0.81081, std: 0.00280, params: {'max_depth': 7, 'min_child_weight': 1}
mean: 0.81074, std: 0.00257, params: {'max_depth': 7, 'min_child_weight': 2}
mean: 0.81235, std: 0.00379, params: {'max_depth': 7, 'min_child_weight': 3}
mean: 0.81382, std: 0.00402, params: {'max_depth': 7, 'min_child_weight': 4}
mean: 0.81455, std: 0.00391, params: {'max_depth': 7, 'min_child_weight': 5}
mean: 0.81476, std: 0.00444, params: {'max_depth': 7, 'min_child_weight': 6}
mean: 0.81374, std: 0.00369, params: {'max_depth': 7, 'min_child_weight': 7}
mean: 0.81552, std: 0.00592, params: {'max_depth': 7, 'min_child_weight': 8}
mean: 0.81548, std: 0.00328, params: {'max_depth': 7, 'min_child_weight': 9}
mean: 0.81494, std: 0.00416, params: {'max_depth': 7, 'min_child_weight': 10}
mean: 0.81563, std: 0.00382, params: {'max_depth': 7, 'min_child_weight': 11}
best score:0.835569
best param:{'max_depth': 3, 'min_child_weight': 11}
############################### tuning for grid_param:{'gamma': [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]} 
Fitting 4 folds for each of 10 candidates, totalling 40 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed: 12.3min
[Parallel(n_jobs=8)]: Done  40 out of  40 | elapsed: 29.4min finished
[CV] gamma=0.0 .......................................................
[CV] .............................. gamma=0.0, score=0.831198 - 6.1min
[CV] gamma=0.2 .......................................................
[CV] .............................. gamma=0.2, score=0.831267 - 5.8min
[CV] gamma=0.4 .......................................................
[CV] .............................. gamma=0.4, score=0.831222 - 5.8min
[CV] gamma=0.6 .......................................................
[CV] .............................. gamma=0.6, score=0.831270 - 5.8min
[CV] gamma=0.8 .......................................................
[CV] .............................. gamma=0.8, score=0.831135 - 5.6min
[CV] gamma=0.1 .......................................................
[CV] .............................. gamma=0.1, score=0.843902 - 6.0min
[CV] gamma=0.2 .......................................................
[CV] .............................. gamma=0.2, score=0.831222 - 5.8min
[CV] gamma=0.4 .......................................................
[CV] .............................. gamma=0.4, score=0.831270 - 5.9min
[CV] gamma=0.6 .......................................................
[CV] .............................. gamma=0.6, score=0.830752 - 5.8min
[CV] gamma=0.8 .......................................................
[CV] .............................. gamma=0.8, score=0.830748 - 5.5min
[CV] gamma=0.0 .......................................................
[CV] .............................. gamma=0.0, score=0.844432 - 6.1min
[CV] gamma=0.3 .......................................................
[CV] .............................. gamma=0.3, score=0.831222 - 6.0min
[CV] gamma=0.5 .......................................................
[CV] .............................. gamma=0.5, score=0.843572 - 5.8min
[CV] gamma=0.6 .......................................................
[CV] .............................. gamma=0.6, score=0.834795 - 5.7min
[CV] gamma=0.9 .......................................................
[CV] .............................. gamma=0.9, score=0.831135 - 5.5min
[CV] gamma=0.1 .......................................................
[CV] .............................. gamma=0.1, score=0.831267 - 6.0min
[CV] gamma=0.2 .......................................................
[CV] .............................. gamma=0.2, score=0.843565 - 6.0min
[CV] gamma=0.5 .......................................................
[CV] .............................. gamma=0.5, score=0.831270 - 5.9min
[CV] gamma=0.7 .......................................................
[CV] .............................. gamma=0.7, score=0.832085 - 5.6min
[CV] gamma=0.8 .......................................................
[CV] .............................. gamma=0.8, score=0.843584 - 5.6min
mean: 0.83557, std: 0.00539, params: {'gamma': 0.0}
mean: 0.83548, std: 0.00518, params: {'gamma': 0.1}
mean: 0.83531, std: 0.00503, params: {'gamma': 0.2}
mean: 0.83520, std: 0.00486, params: {'gamma': 0.3}
mean: 0.83521, std: 0.00504, params: {'gamma': 0.4}
mean: 0.83516, std: 0.00508, params: {'gamma': 0.5}
mean: 0.83510, std: 0.00513, params: {'gamma': 0.6}
mean: 0.83533, std: 0.00497, params: {'gamma': 0.7}
mean: 0.83510, std: 0.00516, params: {'gamma': 0.8}
mean: 0.83532, std: 0.00553, params: {'gamma': 0.9}
best score:0.835569
best param:{'gamma': 0.0}
############################### tuning for grid_param:{'subsample': [0.6, 0.7, 0.8, 0.9], 'colsample_bytree': [0.6, 0.7, 0.8, 0.9]} 
Fitting 4 folds for each of 16 candidates, totalling 64 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed:  7.2min
[Parallel(n_jobs=8)]: Done  64 out of  64 | elapsed: 35.3min finished
[CV] subsample=0.6, colsample_bytree=0.6 .............................
[CV] .... subsample=0.6, colsample_bytree=0.6, score=0.831795 - 3.5min
[CV] subsample=0.8, colsample_bytree=0.6 .............................
[CV] .... subsample=0.8, colsample_bytree=0.6, score=0.831313 - 3.6min
[CV] subsample=0.6, colsample_bytree=0.7 .............................
[CV] .... subsample=0.6, colsample_bytree=0.7, score=0.842223 - 4.5min
[CV] subsample=0.9, colsample_bytree=0.7 .............................
[CV] .... subsample=0.9, colsample_bytree=0.7, score=0.831821 - 4.1min
[CV] subsample=0.6, colsample_bytree=0.8 .............................
[CV] .... subsample=0.6, colsample_bytree=0.8, score=0.832810 - 4.8min
[CV] subsample=0.9, colsample_bytree=0.8 .............................
[CV] .... subsample=0.9, colsample_bytree=0.8, score=0.832409 - 4.5min
[CV] subsample=0.7, colsample_bytree=0.9 .............................
[CV] .... subsample=0.7, colsample_bytree=0.9, score=0.830662 - 5.3min
[CV] subsample=0.9, colsample_bytree=0.9 .............................
[CV] .... subsample=0.9, colsample_bytree=0.9, score=0.830704 - 4.9min
[CV] subsample=0.6, colsample_bytree=0.6 .............................
[CV] .... subsample=0.6, colsample_bytree=0.6, score=0.842965 - 3.6min
[CV] subsample=0.9, colsample_bytree=0.6 .............................
[CV] .... subsample=0.9, colsample_bytree=0.6, score=0.831944 - 3.2min
[CV] subsample=0.6, colsample_bytree=0.7 .............................
[CV] .... subsample=0.6, colsample_bytree=0.7, score=0.832034 - 4.4min
[CV] subsample=0.8, colsample_bytree=0.7 .............................
[CV] .... subsample=0.8, colsample_bytree=0.7, score=0.831609 - 4.0min
[CV] subsample=0.6, colsample_bytree=0.8 .............................
[CV] .... subsample=0.6, colsample_bytree=0.8, score=0.831582 - 4.7min
[CV] subsample=0.8, colsample_bytree=0.8 .............................
[CV] .... subsample=0.8, colsample_bytree=0.8, score=0.831097 - 4.6min
[CV] subsample=0.6, colsample_bytree=0.9 .............................
[CV] .... subsample=0.6, colsample_bytree=0.9, score=0.831051 - 5.3min
[CV] subsample=0.8, colsample_bytree=0.9 .............................
[CV] .... subsample=0.8, colsample_bytree=0.9, score=0.831163 - 5.1min
[CV] subsample=0.7, colsample_bytree=0.6 .............................
[CV] .... subsample=0.7, colsample_bytree=0.6, score=0.845269 - 3.6min
[CV] subsample=0.9, colsample_bytree=0.6 .............................
[CV] .... subsample=0.9, colsample_bytree=0.6, score=0.832802 - 3.5min
[CV] subsample=0.7, colsample_bytree=0.7 .............................
[CV] .... subsample=0.7, colsample_bytree=0.7, score=0.843073 - 4.3min
[CV] subsample=0.8, colsample_bytree=0.7 .............................
[CV] .... subsample=0.8, colsample_bytree=0.7, score=0.836580 - 4.2min
[CV] subsample=0.7, colsample_bytree=0.8 .............................
[CV] .... subsample=0.7, colsample_bytree=0.8, score=0.841269 - 4.8min
[CV] subsample=0.9, colsample_bytree=0.8 .............................
[CV] .... subsample=0.9, colsample_bytree=0.8, score=0.844322 - 4.5min
[CV] subsample=0.7, colsample_bytree=0.9 .............................
[CV] .... subsample=0.7, colsample_bytree=0.9, score=0.831122 - 5.3min
[CV] subsample=0.9, colsample_bytree=0.9 .............................
[CV] .... subsample=0.9, colsample_bytree=0.9, score=0.843573 - 4.9min
[CV] subsample=0.7, colsample_bytree=0.6 .............................
[CV] .... subsample=0.7, colsample_bytree=0.6, score=0.832565 - 3.6min
[CV] subsample=0.9, colsample_bytree=0.6 .............................
[CV] .... subsample=0.9, colsample_bytree=0.6, score=0.842656 - 3.5min
[CV] subsample=0.7, colsample_bytree=0.7 .............................
[CV] .... subsample=0.7, colsample_bytree=0.7, score=0.832678 - 4.4min
[CV] subsample=0.9, colsample_bytree=0.7 .............................
[CV] .... subsample=0.9, colsample_bytree=0.7, score=0.831508 - 3.9min
[CV] subsample=0.6, colsample_bytree=0.8 .............................
[CV] .... subsample=0.6, colsample_bytree=0.8, score=0.841268 - 4.9min
[CV] subsample=0.8, colsample_bytree=0.8 .............................
[CV] .... subsample=0.8, colsample_bytree=0.8, score=0.835577 - 4.5min
[CV] subsample=0.6, colsample_bytree=0.9 .............................
[CV] .... subsample=0.6, colsample_bytree=0.9, score=0.834444 - 5.2min
[CV] subsample=0.8, colsample_bytree=0.9 .............................
[CV] .... subsample=0.8, colsample_bytree=0.9, score=0.835501 - 5.1min
[CV] subsample=0.7, colsample_bytree=0.6 .............................
[CV] .... subsample=0.7, colsample_bytree=0.6, score=0.836727 - 3.6min
[CV] subsample=0.9, colsample_bytree=0.6 .............................
[CV] .... subsample=0.9, colsample_bytree=0.6, score=0.837542 - 3.4min
[CV] subsample=0.6, colsample_bytree=0.7 .............................
[CV] .... subsample=0.6, colsample_bytree=0.7, score=0.831395 - 3.9min
[CV] subsample=0.8, colsample_bytree=0.7 .............................
[CV] .... subsample=0.8, colsample_bytree=0.7, score=0.831383 - 4.3min
[CV] subsample=0.6, colsample_bytree=0.8 .............................
[CV] .... subsample=0.6, colsample_bytree=0.8, score=0.831108 - 4.8min
[CV] subsample=0.8, colsample_bytree=0.8 .............................
[CV] .... subsample=0.8, colsample_bytree=0.8, score=0.830521 - 4.6min
[CV] subsample=0.6, colsample_bytree=0.9 .............................
[CV] .... subsample=0.6, colsample_bytree=0.9, score=0.833305 - 5.4min
[CV] subsample=0.8, colsample_bytree=0.9 .............................
[CV] .... subsample=0.8, colsample_bytree=0.9, score=0.831134 - 5.1min
[CV] subsample=0.6, colsample_bytree=0.6 .............................
[CV] .... subsample=0.6, colsample_bytree=0.6, score=0.830671 - 3.5min
[CV] subsample=0.8, colsample_bytree=0.6 .............................
[CV] .... subsample=0.8, colsample_bytree=0.6, score=0.843531 - 3.6min
[CV] subsample=0.7, colsample_bytree=0.7 .............................
[CV] .... subsample=0.7, colsample_bytree=0.7, score=0.831312 - 4.3min
[CV] subsample=0.8, colsample_bytree=0.7 .............................
[CV] .... subsample=0.8, colsample_bytree=0.7, score=0.843088 - 4.2min
[CV] subsample=0.7, colsample_bytree=0.8 .............................
[CV] .... subsample=0.7, colsample_bytree=0.8, score=0.832202 - 4.7min
[CV] subsample=0.8, colsample_bytree=0.8 .............................
[CV] .... subsample=0.8, colsample_bytree=0.8, score=0.843643 - 4.7min
[CV] subsample=0.7, colsample_bytree=0.9 .............................
[CV] ...mean: 0.83481, std: 0.00484, params: {'subsample': 0.6, 'colsample_bytree': 0.6}
mean: 0.83645, std: 0.00548, params: {'subsample': 0.7, 'colsample_bytree': 0.6}
mean: 0.83642, std: 0.00493, params: {'subsample': 0.8, 'colsample_bytree': 0.6}
mean: 0.83624, std: 0.00428, params: {'subsample': 0.9, 'colsample_bytree': 0.6}
mean: 0.83505, std: 0.00431, params: {'subsample': 0.6, 'colsample_bytree': 0.7}
mean: 0.83582, std: 0.00455, params: {'subsample': 0.7, 'colsample_bytree': 0.7}
mean: 0.83567, std: 0.00476, params: {'subsample': 0.8, 'colsample_bytree': 0.7}
mean: 0.83591, std: 0.00488, params: {'subsample': 0.9, 'colsample_bytree': 0.7}
mean: 0.83419, std: 0.00413, params: {'subsample': 0.6, 'colsample_bytree': 0.8}
mean: 0.83526, std: 0.00374, params: {'subsample': 0.7, 'colsample_bytree': 0.8}
mean: 0.83521, std: 0.00525, params: {'subsample': 0.8, 'colsample_bytree': 0.8}
mean: 0.83609, std: 0.00501, params: {'subsample': 0.9, 'colsample_bytree': 0.8}
mean: 0.83542, std: 0.00447, params: {'subsample': 0.6, 'colsample_bytree': 0.9}
mean: 0.83477, std: 0.00463, params: {'subsample': 0.7, 'colsample_bytree': 0.9}
mean: 0.83499, std: 0.00451, params: {'subsample': 0.8, 'colsample_bytree': 0.9}
mean: 0.83531, std: 0.00528, params: {'subsample': 0.9, 'colsample_bytree': 0.9}
best score:0.836448
best param:{'subsample': 0.7, 'colsample_bytree': 0.6}
############################### tuning for grid_param:{'reg_alpha': [1e-05, 0.01, 0.1, 1, 100]} 
Fitting 4 folds for each of 5 candidates, totalling 20 fits
[Parallel(n_jobs=8)]: Done  20 out of  20 | elapsed:  9.1min finished
[CV] reg_alpha=0.01 ..................................................
[CV] ......................... reg_alpha=0.01, score=0.831550 - 3.5min
[CV] reg_alpha=0.1 ...................................................
[CV] .......................... reg_alpha=0.1, score=0.832815 - 3.8min
[CV] reg_alpha=1e-05 .................................................
[CV] ........................ reg_alpha=1e-05, score=0.836727 - 3.6min
[CV] reg_alpha=1 .....................................................
[CV] ............................ reg_alpha=1, score=0.832086 - 3.6min
[CV] reg_alpha=0.01 ..................................................
[CV] ......................... reg_alpha=0.01, score=0.835973 - 3.7min
[CV] reg_alpha=1 .....................................................
[CV] ............................ reg_alpha=1, score=0.836696 - 3.6min
[CV] reg_alpha=1e-05 .................................................
[CV] ........................ reg_alpha=1e-05, score=0.832565 - 3.5min
[CV] reg_alpha=0.1 ...................................................
[CV] .......................... reg_alpha=0.1, score=0.833177 - 3.7min
[CV] reg_alpha=100 ...................................................
[CV] .......................... reg_alpha=100, score=0.832602 - 1.8min
[CV] reg_alpha=0.01 ..................................................
[CV] ......................... reg_alpha=0.01, score=0.832629 - 3.5min
[CV] reg_alpha=0.1 ...................................................
[CV] .......................... reg_alpha=0.1, score=0.845024 - 3.6min
[CV] reg_alpha=100 ...................................................
[CV] .......................... reg_alpha=100, score=0.834873 - 1.8min
mean: 0.83645, std: 0.00548, params: {'reg_alpha': 1e-05}
mean: 0.83627, std: 0.00526, params: {'reg_alpha': 0.01}
mean: 0.83663, std: 0.00495, params: {'reg_alpha': 0.1}
mean: 0.83612, std: 0.00504, params: {'reg_alpha': 1}
mean: 0.83819, std: 0.00518, params: {'reg_alpha': 100}
best score:0.838185
best param:{'reg_alpha': 100}
############################### tuning for grid_param:{'n_estimators': [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400]} 
Fitting 4 folds for each of 14 candidates, totalling 56 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed:  7.4min
[Parallel(n_jobs=8)]: Done  56 out of  56 | elapsed: 64.3min finished
[CV] n_estimators=100 ................................................
[CV] ....................... n_estimators=100, score=0.834238 - 1.2min
[CV] n_estimators=300 ................................................
[CV] ....................... n_estimators=300, score=0.834873 - 3.5min
[CV] n_estimators=500 ................................................
[CV] ....................... n_estimators=500, score=0.831235 - 6.0min
[CV] n_estimators=700 ................................................
[CV] ....................... n_estimators=700, score=0.829300 - 8.6min
[CV] n_estimators=900 ................................................
[CV] ....................... n_estimators=900, score=0.832192 -11.1min
[CV] n_estimators=1100 ...............................................
[CV] ...................... n_estimators=1100, score=0.831682 -13.4min
[CV] n_estimators=1300 ...............................................
[CV] ...................... n_estimators=1300, score=0.830463 -15.7min
[CV] n_estimators=100 ................................................
[CV] ....................... n_estimators=100, score=0.831889 - 1.2min
[CV] n_estimators=300 ................................................
[CV] ....................... n_estimators=300, score=0.846213 - 3.6min
[CV] n_estimators=500 ................................................
[CV] ....................... n_estimators=500, score=0.834078 - 6.1min
[CV] n_estimators=700 ................................................
[CV] ....................... n_estimators=700, score=0.832810 - 8.5min
[CV] n_estimators=900 ................................................
[CV] ....................... n_estimators=900, score=0.843077 -10.6min
[CV] n_estimators=1100 ...............................................
[CV] ...................... n_estimators=1100, score=0.827495 -12.8min
[CV] n_estimators=1300 ...............................................
[CV] ...................... n_estimators=1300, score=0.826188 -16.4min
[CV] n_estimators=100 ................................................
[CV] ....................... n_estimators=100, score=0.845244 - 1.1min
[CV] n_estimators=300 ................................................
[CV] ....................... n_estimators=300, score=0.832602 - 3.7min
[CV] n_estimators=500 ................................................
[CV] ....................... n_estimators=500, score=0.845824 - 6.2min
[CV] n_estimators=700 ................................................
[CV] ....................... n_estimators=700, score=0.844363 - 8.6min
[CV] n_estimators=900 ................................................
[CV] ....................... n_estimators=900, score=0.835691 -10.9min
[CV] n_estimators=1100 ...............................................
[CV] ...................... n_estimators=1100, score=0.834206 -13.7min
[CV] n_estimators=1300 ...............................................
[CV] ...................... n_estimators=1300, score=0.840525 -15.8min
[CV] n_estimators=100 ................................................
[CV] ....................... n_estimators=100, score=0.839192 - 1.2min
[CV] n_estimators=300 ................................................
[CV] ....................... n_estimators=300, score=0.839053 - 3.7min
[CV] n_estimators=500 ................................................
[CV] ....................... n_estimators=500, score=0.837194 - 6.2min
[CV] n_estimators=700 ................................................
[CV] ....................... n_estimators=700, score=0.836108 - 8.0min
[CV] n_estimators=900 ................................................
[CV] ....................... n_estimators=900, score=0.828530 -11.3min
[CV] n_estimators=1100 ...............................................
[CV] ...................... n_estimators=1100, score=0.841880 -13.8min
[CV] n_estimators=1300 ...............................................
[CV] ...................... n_estimators=1300, score=0.832876 -15.4min
[CV] n_estimators=200 ................................................
[CV] ....................... n_estimators=200, score=0.839756 - 2.4min
[CV] n_estimators=400 ................................................
[CV] ....................... n_estimators=400, score=0.838061 - 4.9min
[CV] n_estimators=600 ................................................
[CV] ....................... n_estimators=600, score=0.836886 - 7.0min
[CV] n_estimators=800 ................................................
[CV] ....................... n_estimators=800, score=0.832601 - 9.9min
[CV] n_estimators=1000 ...............................................
[CV] ...................... n_estimators=1000, score=0.831813 -12.0min
[CV] n_estimators=1200 ...............................................
[CV] ...................... n_estimators=1200, score=0.827022 -15.0min
[CV] n_estimators=1400 ...............................................
[CV] ...................... n_estimators=1400, score=0.830586 -12.3min
mean: 0.83764, std: 0.00512, params: {'n_estimators': 100}
mean: 0.83868, std: 0.00496, params: {'n_estimators': 200}
mean: 0.83819, std: 0.00518, params: {'n_estimators': 300}
mean: 0.83755, std: 0.00544, params: {'n_estimators': 400}
mean: 0.83708, std: 0.00547, params: {'n_estimators': 500}
mean: 0.83622, std: 0.00550, params: {'n_estimators': 600}
mean: 0.83565, std: 0.00558, params: {'n_estimators': 700}
mean: 0.83544, std: 0.00547, params: {'n_estimators': 800}
mean: 0.83487, std: 0.00537, params: {'n_estimators': 900}
mean: 0.83433, std: 0.00526, params: {'n_estimators': 1000}
mean: 0.83382, std: 0.00524, params: {'n_estimators': 1100}
mean: 0.83337, std: 0.00533, params: {'n_estimators': 1200}
mean: 0.83251, std: 0.00521, params: {'n_estimators': 1300}
mean: 0.83213, std: 0.00531, params: {'n_estimators': 1400}
best score:0.838684
best param:{'n_estimators': 200}

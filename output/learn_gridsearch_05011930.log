/home/don/sync/scikit-learn/sklearn/cross_validation.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
/home/don/sync/scikit-learn/sklearn/grid_search.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
  DeprecationWarning)
START:preprocessing: (read data, scaling, remove constant columns
/home/don/sync/scikit-learn/sklearn/utils/extmath.py:360: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
  warnings.warn("The number of power iterations is increased to 7 to "
before scaling: (76020, 369)
after scaling: (76020, 337)
############################### tuning for grid_param:{'colsample_bylevel': [0.5, 0.6, 0.7, 0.8]} 
Fitting 4 folds for each of 4 candidates, totalling 16 fits
[Parallel(n_jobs=8)]: Done  16 out of  16 | elapsed:  4.6min finished
[CV] colsample_bylevel=0.5 ...........................................
[CV] .................. colsample_bylevel=0.5, score=0.839767 - 1.0min
[CV] colsample_bylevel=0.7 ...........................................
[CV] .................. colsample_bylevel=0.7, score=0.835593 - 2.5min
[CV] colsample_bylevel=0.5 ...........................................
[CV] .................. colsample_bylevel=0.5, score=0.835791 - 2.0min
[CV] colsample_bylevel=0.8 ...........................................
[CV] .................. colsample_bylevel=0.8, score=0.831176 - 1.9min
[CV] colsample_bylevel=0.6 ...........................................
[CV] .................. colsample_bylevel=0.6, score=0.845563 - 3.4min
[CV] colsample_bylevel=0.8 ...........................................
[CV] .................. colsample_bylevel=0.8, score=0.838881 - 1.2min
[CV] colsample_bylevel=0.6 ...........................................
[CV] .................. colsample_bylevel=0.6, score=0.836681 - 1.0min
[CV] colsample_bylevel=0.7 ...........................................
[CV] .................. colsample_bylevel=0.7, score=0.832355 - 1.9min
[CV] colsample_bylevel=0.5 ...........................................
[CV] .................. colsample_bylevel=0.5, score=0.830985 - 1.9min
[CV] colsample_bylevel=0.7 ...........................................
[CV] .................. colsample_bylevel=0.7, score=0.838772 - 1.9min
[CV] colsample_bylevel=0.6 ...........................................
[CV] .................. colsample_bylevel=0.6, score=0.838473 - 3.8min
mean: 0.83781, std: 0.00504, params: {'colsample_bylevel': 0.5}
mean: 0.83792, std: 0.00521, params: {'colsample_bylevel': 0.6}
mean: 0.83835, std: 0.00533, params: {'colsample_bylevel': 0.7}
mean: 0.83792, std: 0.00567, params: {'colsample_bylevel': 0.8}
best score:0.838355
best param:{'colsample_bylevel': 0.7}
############################### tuning for grid_param:{'scale_pos_weight': [12, 24, 36]} 
Fitting 4 folds for each of 3 candidates, totalling 12 fits
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  1.7min remaining:   -7.8s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  1.8min remaining:   -8.5s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  1.9min remaining:   -8.7s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  2.0min remaining:   -9.3s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  2.1min remaining:   -9.5s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  2.1min remaining:   -9.8s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  2.9min remaining:  -13.2s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  2.9min remaining:  -13.3s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  3.0min remaining:  -13.7s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  3.0min remaining:  -13.7s
[Parallel(n_jobs=8)]: Done  13 out of  12 | elapsed:  3.0min remaining:  -13.9s
[Parallel(n_jobs=8)]: Done  12 out of  12 | elapsed:  3.0min finished
[CV] scale_pos_weight=24 .............................................
[CV] .................... scale_pos_weight=24, score=0.835593 - 2.0min
[CV] scale_pos_weight=12 .............................................
[CV] .................... scale_pos_weight=12, score=0.845889 - 2.1min
[CV] scale_pos_weight=24 .............................................
[CV] .................... scale_pos_weight=24, score=0.832355 - 2.0min
[CV] scale_pos_weight=24 .............................................
[CV] .................... scale_pos_weight=24, score=0.838772 - 2.8min
mean: 0.83807, std: 0.00518, params: {'scale_pos_weight': 12}
mean: 0.83835, std: 0.00533, params: {'scale_pos_weight': 24}
mean: 0.83753, std: 0.00519, params: {'scale_pos_weight': 36}
best score:0.838355
best param:{'scale_pos_weight': 24}
############################### tuning for grid_param:{'learning_rate': [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08]} 
Fitting 4 folds for each of 8 candidates, totalling 32 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed:  5.5min
[Parallel(n_jobs=8)]: Done  32 out of  32 | elapsed:  8.9min finished
[CV] learning_rate=0.01 ..............................................
[CV] ..................... learning_rate=0.01, score=0.836226 - 2.5min
[CV] learning_rate=0.04 ..............................................
[CV] ..................... learning_rate=0.04, score=0.830135 - 2.2min
[CV] learning_rate=0.06 ..............................................
[CV] ..................... learning_rate=0.06, score=0.832002 - 2.0min
[CV] learning_rate=0.08 ..............................................
[CV] ..................... learning_rate=0.08, score=0.831618 - 1.7min
[CV] learning_rate=0.02 ..............................................
[CV] ..................... learning_rate=0.02, score=0.826990 - 2.5min
[CV] learning_rate=0.04 ..............................................
[CV] ..................... learning_rate=0.04, score=0.835584 - 2.1min
[CV] learning_rate=0.05 ..............................................
[CV] ..................... learning_rate=0.05, score=0.840122 - 1.8min
[CV] learning_rate=0.07 ..............................................
[CV] ..................... learning_rate=0.07, score=0.846560 - 1.8min
[CV] learning_rate=0.02 ..............................................
[CV] ..................... learning_rate=0.02, score=0.839579 - 2.4min
[CV] learning_rate=0.03 ..............................................
[CV] ..................... learning_rate=0.03, score=0.834991 - 2.1min
[CV] learning_rate=0.05 ..............................................
[CV] ..................... learning_rate=0.05, score=0.845044 - 1.9min
[CV] learning_rate=0.07 ..............................................
[CV] ..................... learning_rate=0.07, score=0.839180 - 1.8min
[CV] learning_rate=0.01 ..............................................
[CV] ..................... learning_rate=0.01, score=0.834031 - 3.5min
[CV] learning_rate=0.05 ..............................................
[CV] ..................... learning_rate=0.05, score=0.831130 - 2.7min
[CV] learning_rate=0.07 ..............................................
[CV] ..................... learning_rate=0.07, score=0.832130 - 1.9min
[CV] learning_rate=0.01 ..............................................
[CV] ..................... learning_rate=0.01, score=0.820115 - 2.6min
[CV] learning_rate=0.04 ..............................................
[CV] ..................... learning_rate=0.04, score=0.844250 - 2.9min
[CV] learning_rate=0.06 ..............................................
[CV] ..................... learning_rate=0.06, score=0.839437 - 2.2min
[CV] learning_rate=0.08 ..............................................
[CV] ..................... learning_rate=0.08, score=0.838487 - 1.1min
[CV] learning_rate=0.01 ..............................................
[CV] ..................... learning_rate=0.01, score=0.830694 - 2.5min
[CV] learning_rate=0.03 ..............................................
[CV] ..................... learning_rate=0.03, score=0.840297 - 2.3min
[CV] learning_rate=0.06 ..............................................
[CV] ..................... learning_rate=0.06, score=0.835137 - 2.5min
[CV] learning_rate=0.08 ..............................................
[CV] ..................... learning_rate=0.08, score=0.835536 - 1.4min
[CV] learning_rate=0.02 ..............................................
[CV] ..................... learning_rate=0.02, score=0.833579 - 1.3min
[CV] learning_rate=0.03 ..............................................
[CV] ..................... learning_rate=0.03, score=0.829433 - 2.1min
[CV] learning_rate=0.04 ..............................................
[CV] ..................... learning_rate=0.04, score=0.839689 - 2.0min
[CV] learning_rate=0.06 ..............................................
[CV] ..................... learning_rate=0.06, score=0.846147 - 2.0min
[CV] learning_rate=0.08 ..............................................
[CV] ..................... learning_rate=0.08, score=0.846092 - 1.3min
[CV] learning_rate=0.02 ..............................................
[CV] ..................... learning_rate=0.02, score=0.840101 - 2.4min
[CV] learning_rate=0.03 ..............................................
[CV] ..................... learning_rate=0.03, score=0.842594 - 2.0min
[CV] learning_rate=0.05 ..............................................
[CV] ..................... learning_rate=0.05, score=0.835535 - 1.9min
[CV] learning_rate=0.07 ..............................................
[CV] ..................... learning_rate=0.07, score=0.835418 - 2.0min
mean: 0.83027, std: 0.00618, params: {'learning_rate': 0.01}
mean: 0.83506, std: 0.00532, params: {'learning_rate': 0.02}
mean: 0.83683, std: 0.00508, params: {'learning_rate': 0.03}
mean: 0.83741, std: 0.00520, params: {'learning_rate': 0.04}
mean: 0.83796, std: 0.00518, params: {'learning_rate': 0.05}
mean: 0.83818, std: 0.00530, params: {'learning_rate': 0.06}
mean: 0.83832, std: 0.00537, params: {'learning_rate': 0.07}
mean: 0.83793, std: 0.00530, params: {'learning_rate': 0.08}
best score:0.838322
best param:{'learning_rate': 0.07}

/home/don/sync/scikit-learn/sklearn/cross_validation.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
/home/don/sync/scikit-learn/sklearn/grid_search.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
  DeprecationWarning)
START:preprocessing: (read data, scaling, remove constant columns
/home/don/sync/scikit-learn/sklearn/utils/extmath.py:360: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
  warnings.warn("The number of power iterations is increased to 7 to "
before scaling: (76020, 369)
after scaling: (76020, 337)
############################### tuning for grid_param:{'min_child_weight': [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]} 
Fitting 4 folds for each of 10 candidates, totalling 40 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed: 14.8min
[Parallel(n_jobs=8)]: Done  40 out of  40 | elapsed: 30.1min finished
[CV] min_child_weight=12 .............................................
[CV] .................... min_child_weight=12, score=0.843214 - 5.2min
[CV] min_child_weight=13 .............................................
[CV] .................... min_child_weight=13, score=0.843888 - 6.2min
[CV] min_child_weight=16 .............................................
[CV] .................... min_child_weight=16, score=0.830771 - 5.6min
[CV] min_child_weight=18 .............................................
[CV] .................... min_child_weight=18, score=0.832128 - 6.1min
[CV] min_child_weight=20 .............................................
[CV] .................... min_child_weight=20, score=0.831487 - 5.6min
[CV] min_child_weight=11 .............................................
[CV] .................... min_child_weight=11, score=0.835605 - 7.1min
[CV] min_child_weight=14 .............................................
[CV] .................... min_child_weight=14, score=0.843704 - 5.8min
[CV] min_child_weight=16 .............................................
[CV] .................... min_child_weight=16, score=0.842922 - 5.7min
[CV] min_child_weight=18 .............................................
[CV] .................... min_child_weight=18, score=0.844166 - 6.2min
[CV] min_child_weight=20 .............................................
[CV] .................... min_child_weight=20, score=0.843921 - 4.6min
[CV] min_child_weight=12 .............................................
[CV] .................... min_child_weight=12, score=0.835423 - 8.9min
[CV] min_child_weight=14 .............................................
[CV] .................... min_child_weight=14, score=0.835527 - 5.8min
[CV] min_child_weight=16 .............................................
[CV] .................... min_child_weight=16, score=0.835257 - 6.0min
[CV] min_child_weight=18 .............................................
[CV] .................... min_child_weight=18, score=0.835644 - 5.8min
[CV] min_child_weight=20 .............................................
[CV] .................... min_child_weight=20, score=0.835300 - 3.5min
[CV] min_child_weight=12 .............................................
[CV] .................... min_child_weight=12, score=0.831009 - 5.4min
[CV] min_child_weight=14 .............................................
[CV] .................... min_child_weight=14, score=0.830084 - 6.2min
[CV] min_child_weight=16 .............................................
[CV] .................... min_child_weight=16, score=0.830737 - 5.6min
[CV] min_child_weight=18 .............................................
[CV] .................... min_child_weight=18, score=0.831038 - 6.1min
[CV] min_child_weight=20 .............................................
[CV] .................... min_child_weight=20, score=0.830871 - 5.4min
[CV] min_child_weight=11 .............................................
[CV] .................... min_child_weight=11, score=0.830177 - 5.1min
[CV] min_child_weight=13 .............................................
[CV] .................... min_child_weight=13, score=0.832546 - 6.0min
[CV] min_child_weight=15 .............................................
[CV] .................... min_child_weight=15, score=0.829428 - 5.8min
[CV] min_child_weight=17 .............................................
[CV] .................... min_child_weight=17, score=0.843127 - 6.2min
[CV] min_child_weight=19 .............................................
[CV] .................... min_child_weight=19, score=0.835723 - 5.7min
[CV] min_child_weight=11 .............................................
[CV] .................... min_child_weight=11, score=0.844388 - 5.4min
[CV] min_child_weight=13 .............................................
[CV] .................... min_child_weight=13, score=0.835034 - 5.7min
[CV] min_child_weight=15 .............................................
[CV] .................... min_child_weight=15, score=0.832093 - 5.6min
[CV] min_child_weight=17 .............................................
[CV] .................... min_child_weight=17, score=0.831003 - 6.1min
[CV] min_child_weight=19 .............................................
[CV] .................... min_child_weight=19, score=0.831271 - 5.6min
mean: 0.83530, std: 0.00564, params: {'min_child_weight': 11}
mean: 0.83524, std: 0.00492, params: {'min_child_weight': 12}
mean: 0.83562, std: 0.00499, params: {'min_child_weight': 13}
mean: 0.83497, std: 0.00547, params: {'min_child_weight': 14}
mean: 0.83539, std: 0.00550, params: {'min_child_weight': 15}
mean: 0.83492, std: 0.00497, params: {'min_child_weight': 16}
mean: 0.83524, std: 0.00493, params: {'min_child_weight': 17}
mean: 0.83574, std: 0.00515, params: {'min_child_weight': 18}
mean: 0.83549, std: 0.00536, params: {'min_child_weight': 19}
mean: 0.83539, std: 0.00521, params: {'min_child_weight': 20}
best score:0.835744
best param:{'min_child_weight': 18}
############################### tuning for grid_param:{'subsample': [0.1, 0.2, 0.3, 0.4, 0.5], 'colsample_bytree': [0.1, 0.2, 0.3, 0.4, 0.5]} 
Fitting 4 folds for each of 25 candidates, totalling 100 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed:  3.0min
[Parallel(n_jobs=8)]: Done 100 out of 100 | elapsed: 22.6min finished
[CV] subsample=0.1, colsample_bytree=0.1 .............................
[CV] .... subsample=0.1, colsample_bytree=0.1, score=0.826481 -  54.3s
[CV] subsample=0.3, colsample_bytree=0.1 .............................
[CV] .... subsample=0.3, colsample_bytree=0.1, score=0.836565 - 1.1min
[CV] subsample=0.5, colsample_bytree=0.1 .............................
[CV] .... subsample=0.5, colsample_bytree=0.1, score=0.835897 - 1.3min
[CV] subsample=0.3, colsample_bytree=0.2 .............................
[CV] .... subsample=0.3, colsample_bytree=0.2, score=0.831230 - 1.4min
[CV] subsample=0.5, colsample_bytree=0.2 .............................
[CV] .... subsample=0.5, colsample_bytree=0.2, score=0.832030 - 1.7min
[CV] subsample=0.2, colsample_bytree=0.3 .............................
[CV] .... subsample=0.2, colsample_bytree=0.3, score=0.825569 - 1.6min
[CV] subsample=0.4, colsample_bytree=0.3 .............................
[CV] .... subsample=0.4, colsample_bytree=0.3, score=0.830963 - 2.0min
[CV] subsample=0.1, colsample_bytree=0.4 .............................
[CV] .... subsample=0.1, colsample_bytree=0.4, score=0.824399 - 1.6min
[CV] subsample=0.3, colsample_bytree=0.4 .............................
[CV] .... subsample=0.3, colsample_bytree=0.4, score=0.831420 - 2.2min
[CV] subsample=0.5, colsample_bytree=0.4 .............................
[CV] .... subsample=0.5, colsample_bytree=0.4, score=0.831587 - 2.5min
[CV] subsample=0.2, colsample_bytree=0.5 .............................
[CV] .... subsample=0.2, colsample_bytree=0.5, score=0.826807 - 2.2min
[CV] subsample=0.4, colsample_bytree=0.5 .............................
[CV] .... subsample=0.4, colsample_bytree=0.5, score=0.833834 - 2.9min
[CV] subsample=0.2, colsample_bytree=0.1 .............................
[CV] .... subsample=0.2, colsample_bytree=0.1, score=0.839355 -  59.2s
[CV] subsample=0.4, colsample_bytree=0.1 .............................
[CV] .... subsample=0.4, colsample_bytree=0.1, score=0.833152 - 1.2min
[CV] subsample=0.1, colsample_bytree=0.2 .............................
[CV] .... subsample=0.1, colsample_bytree=0.2, score=0.826714 - 1.1min
[CV] subsample=0.3, colsample_bytree=0.2 .............................
[CV] .... subsample=0.3, colsample_bytree=0.2, score=0.830413 - 1.5min
[CV] subsample=0.5, colsample_bytree=0.2 .............................
[CV] .... subsample=0.5, colsample_bytree=0.2, score=0.830782 - 1.7min
[CV] subsample=0.2, colsample_bytree=0.3 .............................
[CV] .... subsample=0.2, colsample_bytree=0.3, score=0.832123 - 1.7min
[CV] subsample=0.4, colsample_bytree=0.3 .............................
[CV] .... subsample=0.4, colsample_bytree=0.3, score=0.832902 - 2.0min
[CV] subsample=0.1, colsample_bytree=0.4 .............................
[CV] .... subsample=0.1, colsample_bytree=0.4, score=0.829579 - 1.5min
[CV] subsample=0.3, colsample_bytree=0.4 .............................
[CV] .... subsample=0.3, colsample_bytree=0.4, score=0.830121 - 2.2min
[CV] subsample=0.5, colsample_bytree=0.4 .............................
[CV] .... subsample=0.5, colsample_bytree=0.4, score=0.832005 - 2.8min
[CV] subsample=0.2, colsample_bytree=0.5 .............................
[CV] .... subsample=0.2, colsample_bytree=0.5, score=0.830512 - 2.1min
[CV] subsample=0.4, colsample_bytree=0.5 .............................
[CV] .... subsample=0.4, colsample_bytree=0.5, score=0.830782 - 2.9min
[CV] subsample=0.2, colsample_bytree=0.1 .............................
[CV] .... subsample=0.2, colsample_bytree=0.1, score=0.825953 - 1.0min
[CV] subsample=0.4, colsample_bytree=0.1 .............................
[CV] .... subsample=0.4, colsample_bytree=0.1, score=0.838401 - 1.3min
[CV] subsample=0.1, colsample_bytree=0.2 .............................
[CV] .... subsample=0.1, colsample_bytree=0.2, score=0.838409 - 1.1min
[CV] subsample=0.3, colsample_bytree=0.2 .............................
[CV] .... subsample=0.3, colsample_bytree=0.2, score=0.842331 - 1.4min
[CV] subsample=0.5, colsample_bytree=0.2 .............................
[CV] .... subsample=0.5, colsample_bytree=0.2, score=0.844291 - 1.7min
[CV] subsample=0.2, colsample_bytree=0.3 .............................
[CV] .... subsample=0.2, colsample_bytree=0.3, score=0.839193 - 1.7min
[CV] subsample=0.4, colsample_bytree=0.3 .............................
[CV] .... subsample=0.4, colsample_bytree=0.3, score=0.841747 - 1.9min
[CV] subsample=0.1, colsample_bytree=0.4 .............................
[CV] .... subsample=0.1, colsample_bytree=0.4, score=0.837764 - 1.6min
[CV] subsample=0.3, colsample_bytree=0.4 .............................
[CV] .... subsample=0.3, colsample_bytree=0.4, score=0.843049 - 2.2min
[CV] subsample=0.5, colsample_bytree=0.4 .............................
[CV] .... subsample=0.5, colsample_bytree=0.4, score=0.843876 - 2.7min
[CV] subsample=0.2, colsample_bytree=0.5 .............................
[CV] .... subsample=0.2, colsample_bytree=0.5, score=0.843200 - 2.2min
[CV] subsample=0.4, colsample_bytree=0.5 .............................
[CV] .... subsample=0.4, colsample_bytree=0.5, score=0.843189 - 2.8min
[CV] subsample=0.2, colsample_bytree=0.1 .............................
[CV] .... subsample=0.2, colsample_bytree=0.1, score=0.834427 -  58.2s
[CV] subsample=0.4, colsample_bytree=0.1 .............................
[CV] .... subsample=0.4, colsample_bytree=0.1, score=0.829040 - 1.1min
[CV] subsample=0.1, colsample_bytree=0.2 .............................
[CV] .... subsample=0.1, colsample_bytree=0.2, score=0.823832 - 1.2min
[CV] subsample=0.2, colsample_bytree=0.2 .............................
[CV] .... subsample=0.2, colsample_bytree=0.2, score=0.832708 - 1.2min
[CV] subsample=0.4, colsample_bytree=0.2 .............................
[CV] .... subsample=0.4, colsample_bytree=0.2, score=0.831654 - 1.4min
[CV] subsample=0.1, colsample_bytree=0.3 .............................
[CV] .... subsample=0.1, colsample_bytree=0.3, score=0.825283 - 1.3min
[CV] subsample=0.3, colsample_bytree=0.3 .............................
[CV] .... subsample=0.3, colsample_bytree=0.3, score=0.830647 - 1.8min
[CV] subsample=0.5, colsample_bytree=0.3 .............................
[CV] .... subsample=0.5, colsample_bytree=0.3, score=0.831832 - 2.2min
[CV] subsample=0.2, colsample_bytree=0.4 .............................
[CV] .... subsample=0.2, colsample_bytree=0.4, score=0.827494 - 2.0min
[CV] subsample=0.4, colsample_bytree=0.4 .............................
[CV] .... subsample=0.4, colsample_bytree=0.4, score=0.834323 - 2.5min
[CV] subsample=0.1, colsample_bytree=0.5 .............................
[CV] .... subsample=0.1, colsample_bytree=0.5, score=0.821423 - 1.7min
[CV] subsample=0.2, colsample_bytree=0.5 .............................
[CV] .... subsample=0.2, colsample_bytree=0.5, score=0.830685 - 2.2min
[CV] subsample=0.4, colsample_bytree=0.5 .............................
[CV] .... subsample=0.4, colsample_bytree=0.5, score=0.835877 - 2.7min
mean: 0.82664, std: 0.00534, params: {'subsample': 0.1, 'colsample_bytree': 0.1}
mean: 0.83259, std: 0.00493, params: {'subsample': 0.2, 'colsample_bytree': 0.1}
mean: 0.83325, std: 0.00291, params: {'subsample': 0.3, 'colsample_bytree': 0.1}
mean: 0.83449, std: 0.00371, params: {'subsample': 0.4, 'colsample_bytree': 0.1}
mean: 0.83463, std: 0.00414, params: {'subsample': 0.5, 'colsample_bytree': 0.1}
mean: 0.82890, std: 0.00561, params: {'subsample': 0.1, 'colsample_bytree': 0.2}
mean: 0.83173, std: 0.00522, params: {'subsample': 0.2, 'colsample_bytree': 0.2}
mean: 0.83544, std: 0.00490, params: {'subsample': 0.3, 'colsample_bytree': 0.2}
mean: 0.83635, std: 0.00462, params: {'subsample': 0.4, 'colsample_bytree': 0.2}
mean: 0.83584, std: 0.00528, params: {'subsample': 0.5, 'colsample_bytree': 0.2}
mean: 0.83099, std: 0.00674, params: {'subsample': 0.1, 'colsample_bytree': 0.3}
mean: 0.83266, std: 0.00486, params: {'subsample': 0.2, 'colsample_bytree': 0.3}
mean: 0.83493, std: 0.00448, params: {'subsample': 0.3, 'colsample_bytree': 0.3}
mean: 0.83589, std: 0.00424, params: {'subsample': 0.4, 'colsample_bytree': 0.3}
mean: 0.83533, std: 0.00496, params: {'subsample': 0.5, 'colsample_bytree': 0.3}
mean: 0.82981, std: 0.00495, params: {'subsample': 0.1, 'colsample_bytree': 0.4}
mean: 0.83282, std: 0.00470, params: {'subsample': 0.2, 'colsample_bytree': 0.4}
mean: 0.83452, std: 0.00507, params: {'subsample': 0.3, 'colsample_bytree': 0.4}
mean: 0.83682, std: 0.00447, params: {'subsample': 0.4, 'colsample_bytree': 0.4}
mean: 0.83621, std: 0.00498, params: {'subsample': 0.5, 'colsample_bytree': 0.4}
mean: 0.82970, std: 0.00571, params: {'subsample': 0.1, 'colsample_bytree': 0.5}
mean: 0.83280, std: 0.00620, params: {'subsample': 0.2, 'colsample_bytree': 0.5}
mean: 0.83586, std: 0.00541, params: {'subsample': 0.3, 'colsample_bytree': 0.5}
mean: 0.83592, std: 0.00457, params: {'subsample': 0.4, 'colsample_bytree': 0.5}
mean: 0.83518, std: 0.00526, params: {'subsample': 0.5, 'colsample_bytree': 0.5}
best score:0.836819
best param:{'subsample': 0.4, 'colsample_bytree': 0.4}
############################### tuning for grid_param:{'reg_alpha': [100, 200, 300, 400], 'reg_lambda': [1e-05, 0.01, 0.1, 1, 100]} 
Fitting 4 folds for each of 20 candidates, totalling 80 fits
[Parallel(n_jobs=8)]: Done  16 tasks      | elapsed:  5.9min
[Parallel(n_jobs=8)]: Done  80 out of  80 | elapsed: 24.1min finished
[CV] reg_alpha=100, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=100, reg_lambda=1e-05, score=0.846659 - 2.4min
[CV] reg_alpha=100, reg_lambda=0.1 ...................................
[CV] .......... reg_alpha=100, reg_lambda=0.1, score=0.832256 - 2.6min
[CV] reg_alpha=100, reg_lambda=100 ...................................
[CV] .......... reg_alpha=100, reg_lambda=100, score=0.832060 - 2.5min
[CV] reg_alpha=200, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=200, reg_lambda=0.01, score=0.839284 - 2.5min
[CV] reg_alpha=200, reg_lambda=100 ...................................
[CV] .......... reg_alpha=200, reg_lambda=100, score=0.832171 - 2.5min
[CV] reg_alpha=300, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=300, reg_lambda=0.01, score=0.833765 - 2.1min
[CV] reg_alpha=300, reg_lambda=0.1 ...................................
[CV] .......... reg_alpha=300, reg_lambda=0.1, score=0.830452 - 2.2min
[CV] reg_alpha=300, reg_lambda=100 ...................................
[CV] .......... reg_alpha=300, reg_lambda=100, score=0.830134 - 2.3min
[CV] reg_alpha=400, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=400, reg_lambda=0.01, score=0.832050 - 2.1min
[CV] reg_alpha=400, reg_lambda=1 .....................................
[CV] ............ reg_alpha=400, reg_lambda=1, score=0.831981 - 2.2min
[CV] reg_alpha=100, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=100, reg_lambda=0.01, score=0.832256 - 2.5min
[CV] reg_alpha=100, reg_lambda=0.1 ...................................
[CV] .......... reg_alpha=100, reg_lambda=0.1, score=0.846658 - 2.5min
[CV] reg_alpha=100, reg_lambda=100 ...................................
[CV] .......... reg_alpha=100, reg_lambda=100, score=0.836506 - 2.5min
[CV] reg_alpha=200, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=200, reg_lambda=0.01, score=0.845211 - 2.3min
[CV] reg_alpha=200, reg_lambda=1 .....................................
[CV] ............ reg_alpha=200, reg_lambda=1, score=0.832347 - 2.5min
[CV] reg_alpha=300, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=300, reg_lambda=1e-05, score=0.830453 - 2.4min
[CV] reg_alpha=300, reg_lambda=0.1 ...................................
[CV] .......... reg_alpha=300, reg_lambda=0.1, score=0.833764 - 2.3min
[CV] reg_alpha=300, reg_lambda=100 ...................................
[CV] .......... reg_alpha=300, reg_lambda=100, score=0.833670 - 2.3min
[CV] reg_alpha=400, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=400, reg_lambda=0.01, score=0.838025 - 2.0min
[CV] reg_alpha=400, reg_lambda=1 .....................................
[CV] ............ reg_alpha=400, reg_lambda=1, score=0.842277 - 2.2min
[CV] reg_alpha=100, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=100, reg_lambda=0.01, score=0.836348 - 2.5min
[CV] reg_alpha=100, reg_lambda=1 .....................................
[CV] ............ reg_alpha=100, reg_lambda=1, score=0.836917 - 2.6min
[CV] reg_alpha=200, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=200, reg_lambda=1e-05, score=0.832414 - 2.4min
[CV] reg_alpha=200, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=200, reg_lambda=0.01, score=0.835386 - 2.4min
[CV] reg_alpha=200, reg_lambda=1 .....................................
[CV] ............ reg_alpha=200, reg_lambda=1, score=0.835395 - 2.5min
[CV] reg_alpha=300, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=300, reg_lambda=1e-05, score=0.843766 - 2.4min
[CV] reg_alpha=300, reg_lambda=1 .....................................
[CV] ............ reg_alpha=300, reg_lambda=1, score=0.833877 - 2.3min
[CV] reg_alpha=400, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=400, reg_lambda=1e-05, score=0.832050 - 1.8min
[CV] reg_alpha=400, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=400, reg_lambda=0.01, score=0.828287 - 2.1min
[CV] reg_alpha=400, reg_lambda=1 .....................................
[CV] ............ reg_alpha=400, reg_lambda=1, score=0.828286 - 2.2min
[CV] reg_alpha=100, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=100, reg_lambda=0.01, score=0.846659 - 2.5min
[CV] reg_alpha=100, reg_lambda=1 .....................................
[CV] ............ reg_alpha=100, reg_lambda=1, score=0.832234 - 2.6min
[CV] reg_alpha=200, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=200, reg_lambda=1e-05, score=0.845211 - 2.5min
[CV] reg_alpha=200, reg_lambda=0.1 ...................................
[CV] .......... reg_alpha=200, reg_lambda=0.1, score=0.832362 - 2.4min
[CV] reg_alpha=200, reg_lambda=1 .....................................
[CV] ............ reg_alpha=200, reg_lambda=1, score=0.839288 - 2.5min
[CV] reg_alpha=300, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=300, reg_lambda=0.01, score=0.830453 - 2.3min
[CV] reg_alpha=300, reg_lambda=1 .....................................
[CV] ............ reg_alpha=300, reg_lambda=1, score=0.830459 - 2.3min
[CV] reg_alpha=400, reg_lambda=1e-05 .................................
[CV] ........ reg_alpha=400, reg_lambda=1e-05, score=0.828287 - 2.1min
[CV] reg_alpha=400, reg_lambda=0.01 ..................................
[CV] ......... reg_alpha=400, reg_lambda=0.01, score=0.842317 - 2.1min
[CV] reg_alpha=400, reg_lambda=1 .....................................
[CV] ............ reg_alpha=400, reg_lambda=1, score=0.838027 - 2.2min
mean: 0.83862, std: 0.00526, params: {'reg_alpha': 100, 'reg_lambda': 1e-05}
mean: 0.83862, std: 0.00526, params: {'reg_alpha': 100, 'reg_lambda': 0.01}
mean: 0.83862, std: 0.00526, params: {'reg_alpha': 100, 'reg_lambda': 0.1}
mean: 0.83859, std: 0.00503, params: {'reg_alpha': 100, 'reg_lambda': 1}
mean: 0.83858, std: 0.00525, params: {'reg_alpha': 100, 'reg_lambda': 100}
mean: 0.83807, std: 0.00479, params: {'reg_alpha': 200, 'reg_lambda': 1e-05}
mean: 0.83807, std: 0.00479, params: {'reg_alpha': 200, 'reg_lambda': 0.01}
mean: 0.83806, std: 0.00480, params: {'reg_alpha': 200, 'reg_lambda': 0.1}
mean: 0.83806, std: 0.00480, params: {'reg_alpha': 200, 'reg_lambda': 1}
mean: 0.83793, std: 0.00487, params: {'reg_alpha': 200, 'reg_lambda': 100}
mean: 0.83678, std: 0.00509, params: {'reg_alpha': 300, 'reg_lambda': 1e-05}
mean: 0.83678, std: 0.00509, params: {'reg_alpha': 300, 'reg_lambda': 0.01}
mean: 0.83678, std: 0.00509, params: {'reg_alpha': 300, 'reg_lambda': 0.1}
mean: 0.83680, std: 0.00506, params: {'reg_alpha': 300, 'reg_lambda': 1}
mean: 0.83671, std: 0.00525, params: {'reg_alpha': 300, 'reg_lambda': 100}
mean: 0.83517, std: 0.00539, params: {'reg_alpha': 400, 'reg_lambda': 1e-05}
mean: 0.83517, std: 0.00539, params: {'reg_alpha': 400, 'reg_lambda': 0.01}
mean: 0.83517, std: 0.00539, params: {'reg_alpha': 400, 'reg_lambda': 0.1}
mean: 0.83514, std: 0.00539, params: {'reg_alpha': 400, 'reg_lambda': 1}
mean: 0.83510, std: 0.00550, params: {'reg_alpha': 400, 'reg_lambda': 100}
best score:0.838620
best param:{'reg_alpha': 100, 'reg_lambda': 0.01}
############################### tuning for grid_param:{'n_estimators': [100, 130, 160, 190, 220, 250, 280]} 
Fitting 4 folds for each of 7 candidates, totalling 28 fits
[Parallel(n_jobs=8)]: Done  28 out of  28 | elapsed:  5.4min finished
[CV] n_estimators=130 ................................................
[CV] ....................... n_estimators=130, score=0.834441 - 1.1min
[CV] n_estimators=190 ................................................
[CV] ....................... n_estimators=190, score=0.839590 - 1.6min
[CV] n_estimators=250 ................................................
[CV] ....................... n_estimators=250, score=0.839620 - 1.9min
[CV] n_estimators=130 ................................................
[CV] ....................... n_estimators=130, score=0.839975 - 1.0min
[CV] n_estimators=190 ................................................
[CV] ....................... n_estimators=190, score=0.835530 - 1.5min
[CV] n_estimators=250 ................................................
[CV] ....................... n_estimators=250, score=0.835763 - 2.0min
[CV] n_estimators=130 ................................................
[CV] ....................... n_estimators=130, score=0.831744 - 1.0min
[CV] n_estimators=190 ................................................
[CV] ....................... n_estimators=190, score=0.832296 - 1.3min
[CV] n_estimators=250 ................................................
[CV] ....................... n_estimators=250, score=0.832563 - 2.1min
mean: 0.83672, std: 0.00489, params: {'n_estimators': 100}
mean: 0.83764, std: 0.00490, params: {'n_estimators': 130}
mean: 0.83794, std: 0.00509, params: {'n_estimators': 160}
mean: 0.83814, std: 0.00480, params: {'n_estimators': 190}
mean: 0.83836, std: 0.00485, params: {'n_estimators': 220}
mean: 0.83860, std: 0.00517, params: {'n_estimators': 250}
mean: 0.83861, std: 0.00516, params: {'n_estimators': 280}
best score:0.838609
best param:{'n_estimators': 280}
